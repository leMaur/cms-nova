<?php

namespace App\Nova;

use App\Models\Page as Model;
use App\Nova\Concerns\MetaFields;
use App\Nova\Concerns\SlugForIndex;
use App\Nova\Concerns\StatusForIndex;
use Illuminate\Http\Request;
use Laravel\Nova\Fields\DateTime;
use Laravel\Nova\Fields\Markdown;
use Laravel\Nova\Fields\Select;
use Laravel\Nova\Fields\Stack;
use Laravel\Nova\Fields\Text;
use Laravel\Nova\Panel;

class Page extends Resource
{
    public static $preventFormAbandonment = true;

    public static $model = Model::class;

    public static $group = 'Settings';

    public static $title = 'title';

    public static $search = [
        'id', 'title', 'slug', 'content',
    ];

    public function fields(Request $request): array
    {
        return [
            Text::make('Title')
                ->rules(['required', 'max:'.config('cms.seo.title.limit')])
                ->help('Max '.config('cms.seo.title.limit').' characters.'),

            Select::make('Parent')
                ->options(
                    collect(Model::getAvailableParents())
                        ->mapWithKeys(fn ($item) => [$item => ucfirst($item)])
                        ->prepend(null, null)
                        ->toArray()
                ),

            Text::make('Layout')
                ->suggestions(Model::getAvailableLayouts()),

            Text::make('Slug')
                ->rules(['max:255'])
                ->help('It is generated automatically.')
                ->hideWhenCreating()
                ->hideFromIndex(),

            Markdown::make('Content')
                ->stacked(),

            DateTime::make('Published At'),

            new Panel('Meta Information', MetaFields::make($this)),
        ];
    }

    public function fieldsForIndex(): array
    {
        return [
            Stack::make('Title', [
                Text::make('Title'),
                SlugForIndex::make($this, 'Slug'),
            ])->sortable(),

            StatusForIndex::make($this, 'Status'),
        ];
    }
}
